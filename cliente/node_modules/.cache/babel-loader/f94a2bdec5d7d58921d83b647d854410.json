{"ast":null,"code":"/* eslint no-restricted-globals : 0 */\nimport auth0 from 'auth0-js';\nconst LOGIN_SUCCESS = '/contacto';\nconst LOGIN_FAILURE = '/';\n\nclass Auth {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: 'dev-wewl-y8p.auth0.com',\n      clientID: '03ewbVYNMUB6VAu7c4MXjwN2tgoGBHx4',\n      redirectUri: 'http://localhost:3000/callback',\n      audience: 'https://dev-wewl-y8p.auth0.com/userinfo',\n      responseType: 'token id_token',\n      scope: 'openid'\n    });\n\n    this.login = () => {\n      this.auth0.authorize();\n    };\n\n    this.isAuthenticated = () => {\n      let expiresAt = JSON.parse(localStorage.getItem('expires_at')); // obtengo el timestamp de la validez de la key\n\n      return new Date().getTime() < expiresAt; // me fijo si sigue siendo valida\n    };\n\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResults) => {\n      if (true) {\n        let expiresAt = JSON.stringify(authResults.expiresIn * 1000 + new Date().getTime()); // lo convierto a timestamp\n\n        localStorage.setItem(\"access_token\", authResults.accessToken);\n        localStorage.setItem(\"id_token\", authResults.idToken);\n        localStorage.setItem(\"expires_at\", expiresAt);\n        location.hash = \"\"; // borro del query stream por seguridad\n\n        location.pathname = LOGIN_SUCCESS;\n        console.log(\"HOLA\");\n      } else {\n        location.pathname = LOGIN_FAILURE;\n      }\n    });\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/Users/santiagobalay/Desktop/workspace/ReactProjects/pagina-react-con-auth/cliente/src/Auth.js"],"names":["auth0","LOGIN_SUCCESS","LOGIN_FAILURE","Auth","constructor","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","login","authorize","isAuthenticated","expiresAt","JSON","parse","localStorage","getItem","Date","getTime","handleAuthentication","bind","parseHash","err","authResults","stringify","expiresIn","setItem","accessToken","idToken","location","hash","pathname","console","log"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,MAAMC,aAAa,GAAG,WAAtB;AACA,MAAMC,aAAa,GAAG,GAAtB;;AACA,MAAMC,IAAN,CAAW;AAWPC,EAAAA,WAAW,GAAG;AAAA,SATdJ,KASc,GATN,IAAIA,KAAK,CAACK,OAAV,CAAkB;AACtBC,MAAAA,MAAM,EAAE,wBADc;AAEtBC,MAAAA,QAAQ,EAAE,kCAFY;AAGtBC,MAAAA,WAAW,EAAE,gCAHS;AAItBC,MAAAA,QAAQ,EAAE,yCAJY;AAKtBC,MAAAA,YAAY,EAAE,gBALQ;AAMtBC,MAAAA,KAAK,EAAE;AANe,KAAlB,CASM;;AAAA,SAIdC,KAJc,GAIN,MAAM;AACV,WAAKZ,KAAL,CAAWa,SAAX;AACH,KANa;;AAAA,SAyBdC,eAzBc,GAyBI,MAAM;AACpB,UAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAhB,CADoB,CAC2C;;AAC/D,aAAO,IAAIC,IAAJ,GAAWC,OAAX,KAAuBN,SAA9B,CAFoB,CAEoB;AAC3C,KA5Ba;;AACV,SAAKO,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACH;;AAMDD,EAAAA,oBAAoB,GAAG;AACnB,SAAKtB,KAAL,CAAWwB,SAAX,CAAqB,CAACC,GAAD,EAAKC,WAAL,KAAqB;AACtC,UAAG,IAAH,EAAS;AACL,YAAIX,SAAS,GAAGC,IAAI,CAACW,SAAL,CAAgBD,WAAW,CAACE,SAAb,GAA0B,IAA1B,GAAiC,IAAIR,IAAJ,GAAWC,OAAX,EAAhD,CAAhB,CADK,CACiF;;AACtFH,QAAAA,YAAY,CAACW,OAAb,CAAqB,cAArB,EAAqCH,WAAW,CAACI,WAAjD;AACAZ,QAAAA,YAAY,CAACW,OAAb,CAAqB,UAArB,EAAiCH,WAAW,CAACK,OAA7C;AACAb,QAAAA,YAAY,CAACW,OAAb,CAAqB,YAArB,EAAmCd,SAAnC;AACAiB,QAAAA,QAAQ,CAACC,IAAT,GAAgB,EAAhB,CALK,CAKc;;AACnBD,QAAAA,QAAQ,CAACE,QAAT,GAAoBjC,aAApB;AACAkC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,OARD,MAQO;AACHJ,QAAAA,QAAQ,CAACE,QAAT,GAAoBhC,aAApB;AAEH;AACJ,KAbD;AAcH;;AAlCM;;AA4CX,eAAeC,IAAf","sourcesContent":["/* eslint no-restricted-globals : 0 */\n\nimport auth0 from 'auth0-js';\n\nconst LOGIN_SUCCESS = '/contacto'\nconst LOGIN_FAILURE = '/'\nclass Auth {\n\n    auth0 = new auth0.WebAuth({\n        domain: 'dev-wewl-y8p.auth0.com',\n        clientID: '03ewbVYNMUB6VAu7c4MXjwN2tgoGBHx4',\n        redirectUri: 'http://localhost:3000/callback',\n        audience: 'https://dev-wewl-y8p.auth0.com/userinfo',\n        responseType: 'token id_token',\n        scope: 'openid'\n    })\n\n    constructor() {\n        this.handleAuthentication = this.handleAuthentication.bind(this)\n    }\n\n    login = () => {\n        this.auth0.authorize()\n    }\n\n    handleAuthentication() {\n        this.auth0.parseHash((err,authResults) => {\n            if(true) {\n                let expiresAt = JSON.stringify((authResults.expiresIn) * 1000 + new Date().getTime()) // lo convierto a timestamp\n                localStorage.setItem(\"access_token\", authResults.accessToken)\n                localStorage.setItem(\"id_token\", authResults.idToken)\n                localStorage.setItem(\"expires_at\", expiresAt)\n                location.hash = \"\" // borro del query stream por seguridad\n                location.pathname = LOGIN_SUCCESS\n                console.log(\"HOLA\")\n            } else {\n                location.pathname = LOGIN_FAILURE\n\n            }\n        })\n    }\n\n    isAuthenticated = () => {\n        let expiresAt = JSON.parse(localStorage.getItem('expires_at')) // obtengo el timestamp de la validez de la key\n        return new Date().getTime() < expiresAt // me fijo si sigue siendo valida\n    }\n\n\n}\n \nexport default Auth;"]},"metadata":{},"sourceType":"module"}